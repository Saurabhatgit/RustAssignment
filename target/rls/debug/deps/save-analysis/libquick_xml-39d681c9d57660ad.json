{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0","program":"/home/saurabhs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","quick_xml","/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"encoding\"","--cfg","feature=\"encoding_rs\"","-C","metadata=39d681c9d57660ad","-C","extra-filename=-39d681c9d57660ad","--out-dir","/home/saurabhs/Desktop/summary_report/target/rls/debug/deps","-L","dependency=/home/saurabhs/Desktop/summary_report/target/rls/debug/deps","--extern","encoding_rs=/home/saurabhs/Desktop/summary_report/target/rls/debug/deps/libencoding_rs-5668d2f0cf773cf2.rmeta","--extern","memchr=/home/saurabhs/Desktop/summary_report/target/rls/debug/deps/libmemchr-afa41390d9bda1a6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/saurabhs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/saurabhs/Desktop/summary_report/target/rls/debug/deps/libquick_xml-39d681c9d57660ad.rmeta"},"prelude":{"crate_id":{"name":"quick_xml","disambiguator":[981415457906806233,0]},"crate_root":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src","external_crates":[{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":20,"id":{"name":"encoding_rs","disambiguator":[5076402565464871643,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","num":22,"id":{"name":"memchr","disambiguator":[13917822150925963026,0]}}],"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":0,"byte_end":4816,"line_start":1,"line_end":142,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4542,"byte_end":4548,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4550,"byte_end":4558,"line_start":128,"line_end":128,"column_start":31,"column_end":39},"alias_span":null,"name":"unescape","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4753,"byte_end":4758,"line_start":140,"line_end":140,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4760,"byte_end":4766,"line_start":140,"line_end":140,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4785,"byte_end":4791,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":705},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4809,"byte_end":4815,"line_start":142,"line_end":142,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":0,"byte_end":4816,"line_start":1,"line_end":142,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":16},{"krate":0,"index":41},{"krate":0,"index":52},{"krate":0,"index":280},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487}],"decl_id":null,"docs":" High performance XML reader/writer.","sig":null,"attributes":[{"value":"/ High performance XML reader/writer.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Description","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":44,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `Reader`: a low level xml pull-reader where buffer allocation/clearing is left to user","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":67,"byte_end":159,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ - `Writer`: a xml writer. Can be nested with readers if you want to transform xmls","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":160,"byte_end":246,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":247,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":251,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":267,"byte_end":270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Reader","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":271,"byte_end":285,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":286,"byte_end":289,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":290,"byte_end":301,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":302,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":329,"byte_end":362,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":363,"byte_end":366,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":367,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":405,"byte_end":461,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/                 <tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":462,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/                     Test 2","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":489,"byte_end":519,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/                 </tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":520,"byte_end":547,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":548,"byte_end":574,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":575,"byte_end":578,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":579,"byte_end":622,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":623,"byte_end":650,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":655,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":678,"byte_end":707,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":708,"byte_end":737,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":738,"byte_end":741,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // The `Reader` does not implement `Iterator` because it outputs borrowed data (`Cow`s)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":742,"byte_end":833,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":834,"byte_end":844,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":845,"byte_end":888,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     // for triggering namespaced events, use this instead:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":889,"byte_end":951,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/     // match reader.read_namespaced_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":952,"byte_end":1009,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1010,"byte_end":1050,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/         // for namespaced:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1051,"byte_end":1081,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/         // Ok((ref namespace_value, Event::Start(ref e)))","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1082,"byte_end":1143,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/             match e.name() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1144,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1177,"byte_end":1243,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1244,"byte_end":1324,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1325,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1388,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1431,"byte_end":1459,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1460,"byte_end":1477,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1478,"byte_end":1492,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         // unescape and decode the text event using the reader encoding","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1493,"byte_end":1568,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1569,"byte_end":1653,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/         Ok(Event::Eof) => break, // exits the loop when reaching end of file","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1654,"byte_end":1734,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1735,"byte_end":1823,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/         _ => (), // There are several other `Event`s we do not consider here","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1824,"byte_end":1904,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1905,"byte_end":1914,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // if we don't keep a borrow elsewhere, we can clear the buffer to keep memory usage low","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":1919,"byte_end":2015,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2016,"byte_end":2036,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2037,"byte_end":2042,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Writer","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2055,"byte_end":2069,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2070,"byte_end":2073,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2074,"byte_end":2085,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2086,"byte_end":2112,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2113,"byte_end":2170,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2171,"byte_end":2197,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2198,"byte_end":2222,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use std::iter;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2223,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2246,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2323,"byte_end":2366,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2367,"byte_end":2394,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2395,"byte_end":2453,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2454,"byte_end":2483,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2484,"byte_end":2494,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2495,"byte_end":2538,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2539,"byte_end":2606,"line_start":74,"line_end":74,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2607,"byte_end":2610,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2611,"byte_end":2698,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2699,"byte_end":2734,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2735,"byte_end":2822,"line_start":78,"line_end":78,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2823,"byte_end":2826,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2827,"byte_end":2873,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2874,"byte_end":2955,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2956,"byte_end":2959,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":2960,"byte_end":3045,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3046,"byte_end":3108,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3113,"byte_end":3162,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3163,"byte_end":3235,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3236,"byte_end":3250,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3251,"byte_end":3316,"line_start":89,"line_end":89,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3317,"byte_end":3413,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3414,"byte_end":3428,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3429,"byte_end":3465,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/         Ok(e) => assert!(writer.write_event(e).is_ok()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3466,"byte_end":3526,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/         // or using the buffer","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3527,"byte_end":3561,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/         // Ok(e) => assert!(writer.write(&buf).is_ok()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3562,"byte_end":3622,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3623,"byte_end":3711,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3712,"byte_end":3721,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3722,"byte_end":3742,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3743,"byte_end":3748,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3753,"byte_end":3803,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3804,"byte_end":3903,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3904,"byte_end":3948,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3949,"byte_end":3956,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3957,"byte_end":3960,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3961,"byte_end":3975,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3976,"byte_end":3979,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ quick-xml supports 2 additional features, non activated by default:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":3980,"byte_end":4051,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ - `encoding`: support non utf8 xmls","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4052,"byte_end":4091,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ - `serialize`: support serde `Serialize`/`Deserialize`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4092,"byte_end":4150,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4151,"byte_end":4174,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4175,"byte_end":4197,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"1024\"","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4198,"byte_end":4226,"line_start":113,"line_end":113,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4941,"byte_end":4943,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(::std::io::Error)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" IO error\n","sig":null,"attributes":[{"value":"/ IO error","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4924,"byte_end":4936,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4986,"byte_end":4990,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::Error::Utf8","value":"Error::Utf8(::std::str::Utf8Error)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Utf8 error\n","sig":null,"attributes":[{"value":"/ Utf8 error","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4967,"byte_end":4981,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5050,"byte_end":5063,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::errors::Error::UnexpectedEof","value":"Error::UnexpectedEof(String)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Unexpected End of File\n","sig":null,"attributes":[{"value":"/ Unexpected End of File","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5019,"byte_end":5045,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":500},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5104,"byte_end":5120,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"EndEventMismatch","qualname":"::errors::Error::EndEventMismatch","value":"Error::EndEventMismatch { expected, found }","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" End event mismatch\n","sig":null,"attributes":[{"value":"/ End event mismatch","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5077,"byte_end":5099,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5267,"byte_end":5282,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::errors::Error::UnexpectedToken","value":"Error::UnexpectedToken(String)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Unexpected token\n","sig":null,"attributes":[{"value":"/ Unexpected token","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5242,"byte_end":5262,"line_start":19,"line_end":19,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5319,"byte_end":5333,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"UnexpectedBang","qualname":"::errors::Error::UnexpectedBang","value":"Error::UnexpectedBang","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Unexpected <!>\n","sig":null,"attributes":[{"value":"/ Unexpected <!>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5296,"byte_end":5314,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5386,"byte_end":5398,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"TextNotFound","qualname":"::errors::Error::TextNotFound","value":"Error::TextNotFound","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Text not found, expected `Event::Text`\n","sig":null,"attributes":[{"value":"/ Text not found, expected `Event::Text`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5339,"byte_end":5381,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":510},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5465,"byte_end":5486,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"XmlDeclWithoutVersion","qualname":"::errors::Error::XmlDeclWithoutVersion","value":"Error::XmlDeclWithoutVersion(Option<String>)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" `Event::XmlDecl` must start with *version* attribute\n","sig":null,"attributes":[{"value":"/ `Event::XmlDecl` must start with *version* attribute","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5404,"byte_end":5460,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":513},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5546,"byte_end":5559,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"NameWithQuote","qualname":"::errors::Error::NameWithQuote","value":"Error::NameWithQuote(usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Attribute Name contains quote\n","sig":null,"attributes":[{"value":"/ Attribute Name contains quote","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5508,"byte_end":5541,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":516},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5619,"byte_end":5632,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NoEqAfterName","qualname":"::errors::Error::NoEqAfterName","value":"Error::NoEqAfterName(usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Attribute key not followed by with `=`\n","sig":null,"attributes":[{"value":"/ Attribute key not followed by with `=`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5572,"byte_end":5614,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":519},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5680,"byte_end":5693,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"UnquotedValue","qualname":"::errors::Error::UnquotedValue","value":"Error::UnquotedValue(usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Attribute value not quoted\n","sig":null,"attributes":[{"value":"/ Attribute value not quoted","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5645,"byte_end":5675,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5734,"byte_end":5753,"line_start":34,"line_end":34,"column_start":5,"column_end":24},"name":"DuplicatedAttribute","qualname":"::errors::Error::DuplicatedAttribute","value":"Error::DuplicatedAttribute(usize, usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Duplicate attribute\n","sig":null,"attributes":[{"value":"/ Duplicate attribute","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5706,"byte_end":5729,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":526},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5794,"byte_end":5805,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EscapeError","qualname":"::errors::Error::EscapeError","value":"Error::EscapeError(::escape::EscapeError)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Escape error\n","sig":null,"attributes":[{"value":"/ Escape error","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5773,"byte_end":5789,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4912,"byte_end":4917,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Io(::std::io::Error),\n    Utf8(::std::str::Utf8Error),\n    UnexpectedEof(String),\n    EndEventMismatch {\n            expected: String,\n            found: String,\n        },\n    UnexpectedToken(String),\n    UnexpectedBang,\n    TextNotFound,\n    XmlDeclWithoutVersion(Option<String>),\n    NameWithQuote(usize),\n    NoEqAfterName(usize),\n    UnquotedValue(usize),\n    DuplicatedAttribute(usize, usize),\n    EscapeError(::escape::EscapeError),\n}","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":526}],"decl_id":null,"docs":" The error type used by this crate.\n","sig":null,"attributes":[{"value":"/ The error type used by this crate.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":4847,"byte_end":4885,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6349,"byte_end":6355,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type where the error is hard-wired to [`Error`].","sig":null,"attributes":[{"value":"/ A specialized `Result` type where the error is hard-wired to [`Error`].","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6229,"byte_end":6304,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6305,"byte_end":6308,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: enum.Error.html","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6309,"byte_end":6339,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12205,"byte_end":12219,"line_start":9,"line_end":9,"column_start":5,"column_end":19},"name":"EntityWithNull","qualname":"::escapei::EscapeError::EntityWithNull","value":"EscapeError::EntityWithNull(::std::ops::Range<usize>)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Entity with Null character\n","sig":null,"attributes":[{"value":"/ Entity with Null character","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12170,"byte_end":12200,"line_start":8,"line_end":8,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12286,"byte_end":12304,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"UnrecognizedSymbol","qualname":"::escapei::EscapeError::UnrecognizedSymbol","value":"EscapeError::UnrecognizedSymbol(::std::ops::Range<usize>, ::std::result::Result<String, ::std::string::FromUtf8Error>)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Unrecognized escape symbol\n","sig":null,"attributes":[{"value":"/ Unrecognized escape symbol","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12251,"byte_end":12281,"line_start":10,"line_end":10,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12454,"byte_end":12472,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"UnterminatedEntity","qualname":"::escapei::EscapeError::UnterminatedEntity","value":"EscapeError::UnterminatedEntity(::std::ops::Range<usize>)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Cannot find `;` after `&`\n","sig":null,"attributes":[{"value":"/ Cannot find `;` after `&`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12420,"byte_end":12449,"line_start":15,"line_end":15,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12540,"byte_end":12558,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"TooLongHexadecimal","qualname":"::escapei::EscapeError::TooLongHexadecimal","value":"EscapeError::TooLongHexadecimal","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Cannot convert Hexa to utf8\n","sig":null,"attributes":[{"value":"/ Cannot convert Hexa to utf8","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12504,"byte_end":12535,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":544},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12615,"byte_end":12633,"line_start":20,"line_end":20,"column_start":5,"column_end":23},"name":"InvalidHexadecimal","qualname":"::escapei::EscapeError::InvalidHexadecimal","value":"EscapeError::InvalidHexadecimal(char)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Character is not a valid hexadecimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid hexadecimal value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12564,"byte_end":12610,"line_start":19,"line_end":19,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12684,"byte_end":12698,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"TooLongDecimal","qualname":"::escapei::EscapeError::TooLongDecimal","value":"EscapeError::TooLongDecimal","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Cannot convert decimal to hexa\n","sig":null,"attributes":[{"value":"/ Cannot convert decimal to hexa","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12645,"byte_end":12679,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12751,"byte_end":12765,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"InvalidDecimal","qualname":"::escapei::EscapeError::InvalidDecimal","value":"EscapeError::InvalidDecimal(char)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Character is not a valid decimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid decimal value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12704,"byte_end":12746,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":531},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12152,"byte_end":12163,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"EscapeError","qualname":"::escapei::EscapeError","value":"pub enum EscapeError {\n    EntityWithNull(::std::ops::Range<usize>),\n    UnrecognizedSymbol(::std::ops::Range<usize>,\n            ::std::result::Result<String, ::std::string::FromUtf8Error>),\n    UnterminatedEntity(::std::ops::Range<usize>),\n    TooLongHexadecimal,\n    InvalidHexadecimal(char),\n    TooLongDecimal,\n    InvalidDecimal(char),\n}","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":14440,"byte_end":14446,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"escape","qualname":"::escapei::escape","value":"pub fn escape(&[u8]) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their\n corresponding xml escaped value.\n","sig":null,"attributes":[{"value":"/ Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":14307,"byte_end":14395,"line_start":66,"line_end":66,"column_start":1,"column_end":89}},{"value":"/ corresponding xml escaped value.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":14396,"byte_end":14432,"line_start":67,"line_end":67,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":15779,"byte_end":15787,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"unescape","qualname":"::escapei::unescape","value":"pub fn unescape(&[u8]) -> Result<Cow<, [u8]>, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value\n","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":15664,"byte_end":15761,"line_start":107,"line_end":107,"column_start":1,"column_end":98}},{"value":"/ value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":15762,"byte_end":15771,"line_start":108,"line_end":108,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4433,"byte_end":4439,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"escape","qualname":"::escape","value":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49}],"decl_id":null,"docs":" Manage xml character escapes\n","sig":null,"attributes":[{"value":"/ Manage xml character escapes","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4446,"byte_end":4478,"line_start":126,"line_end":126,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":52},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::events","value":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":169},{"krate":0,"index":200},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":206},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":217},{"krate":0,"index":225},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":231},{"krate":0,"index":248},{"krate":0,"index":605},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277}],"decl_id":null,"docs":" Defines zero-copy XML events used throughout this library.\n","sig":null,"attributes":[{"value":"/ Defines zero-copy XML events used throughout this library.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20191,"byte_end":20253,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attributes","qualname":"::events::attributes","value":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":554},{"krate":0,"index":561},{"krate":0,"index":84},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":89},{"krate":0,"index":98},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110}],"decl_id":null,"docs":" Xml Attributes module","sig":null,"attributes":[{"value":"/ Xml Attributes module","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44136,"byte_end":44161,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44162,"byte_end":44165,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides an iterator over attributes key/value pairs","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44166,"byte_end":44222,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44684,"byte_end":44694,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::events::attributes::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" Iterator over XML attributes.","sig":null,"attributes":[{"value":"/ Iterator over XML attributes.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44388,"byte_end":44421,"line_start":12,"line_end":12,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44422,"byte_end":44425,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Yields `Result<Attribute>`. An `Err` will be yielded if an attribute is malformed or duplicated.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44426,"byte_end":44526,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ The duplicate check can be turned off by calling [`with_checks(false)`].","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44527,"byte_end":44603,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44604,"byte_end":44607,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`with_checks(false)`]: #method.with_checks","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":44608,"byte_end":44655,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45232,"byte_end":45235,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45169,"byte_end":45220,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45561,"byte_end":45565,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"html","qualname":"<Attributes>::html","value":"pub fn html(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45466,"byte_end":45549,"line_start":45,"line_end":45,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46071,"byte_end":46082,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"with_checks","qualname":"<Attributes>::with_checks","value":"pub fn with_checks(&mut Self, bool) -> &mut Attributes","parent":null,"children":[],"decl_id":null,"docs":" Changes whether attributes should be checked for uniqueness.","sig":null,"attributes":[{"value":"/ Changes whether attributes should be checked for uniqueness.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45795,"byte_end":45859,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45864,"byte_end":45867,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The XML specification requires attribute keys in the same element to be unique. This check","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45872,"byte_end":45966,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ can be disabled to improve performance slightly.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45971,"byte_end":46023,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46028,"byte_end":46031,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46036,"byte_end":46059,"line_start":61,"line_end":61,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46614,"byte_end":46623,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::events::attributes::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":" A struct representing a key/value XML attribute.","sig":null,"attributes":[{"value":"/ A struct representing a key/value XML attribute.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46184,"byte_end":46236,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46237,"byte_end":46240,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Field `value` stores raw bytes, possibly containing escape-sequences. Most users will likely","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46241,"byte_end":46337,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ want to access the value using one of the [`unescaped_value`] and [`unescape_and_decode_value`]","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46338,"byte_end":46437,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"/ functions.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46438,"byte_end":46452,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46453,"byte_end":46456,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`unescaped_value`]: #method.unescaped_value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46457,"byte_end":46505,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/ [`unescape_and_decode_value`]: #method.unescape_and_decode_value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46506,"byte_end":46574,"line_start":75,"line_end":75,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46866,"byte_end":46869,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"key","qualname":"::events::attributes::Attribute::key","value":"&'a [u8]","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" The key to uniquely define the attribute.","sig":null,"attributes":[{"value":"/ The key to uniquely define the attribute.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46634,"byte_end":46679,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46684,"byte_end":46687,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ If [`Attributes::with_checks`] is turned off, the key might not be unique.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46692,"byte_end":46770,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46775,"byte_end":46778,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Attributes::with_checks`]: struct.Attributes.html#method.with_checks","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46783,"byte_end":46857,"line_start":82,"line_end":82,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46929,"byte_end":46934,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"value","qualname":"::events::attributes::Attribute::value","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" The raw value of the attribute.\n","sig":null,"attributes":[{"value":"/ The raw value of the attribute.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46885,"byte_end":46920,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47271,"byte_end":47286,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"unescaped_value","qualname":"<Attribute>::unescaped_value","value":"pub fn unescaped_value(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value.","sig":null,"attributes":[{"value":"/ Returns the unescaped value.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46983,"byte_end":47015,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47020,"byte_end":47023,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47028,"byte_end":47117,"line_start":91,"line_end":91,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47122,"byte_end":47180,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47185,"byte_end":47188,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47193,"byte_end":47259,"line_start":94,"line_end":94,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47943,"byte_end":47968,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"unescape_and_decode_value","qualname":"<Attribute>::unescape_and_decode_value","value":"pub fn unescape_and_decode_value<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value","sig":null,"attributes":[{"value":"/ Decode then unescapes the value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47387,"byte_end":47422,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47427,"byte_end":47430,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47435,"byte_end":47531,"line_start":101,"line_end":101,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47536,"byte_end":47559,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47564,"byte_end":47567,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47572,"byte_end":47668,"line_start":104,"line_end":104,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47673,"byte_end":47759,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47764,"byte_end":47767,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value()`]: #method.unescaped_value","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47772,"byte_end":47822,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47827,"byte_end":47898,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":47903,"byte_end":47931,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49490,"byte_end":49521,"line_start":141,"line_end":141,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<Attribute>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &mut Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49147,"byte_end":49219,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49224,"byte_end":49261,"line_start":134,"line_end":134,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49266,"byte_end":49269,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49274,"byte_end":49338,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49343,"byte_end":49380,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49385,"byte_end":49414,"line_start":138,"line_end":138,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49419,"byte_end":49445,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":49450,"byte_end":49478,"line_start":140,"line_end":140,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21010,"byte_end":21020,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"BytesStart","qualname":"::events::BytesStart","value":"BytesStart {  }","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"decl_id":null,"docs":" Opening tag data (`Event::Start`), with optional attributes.","sig":null,"attributes":[{"value":"/ Opening tag data (`Event::Start`), with optional attributes.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20568,"byte_end":20632,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20633,"byte_end":20636,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `<name attr=\"value\">`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20637,"byte_end":20663,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20664,"byte_end":20667,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The name can be accessed using the [`name`], [`local_name`] or [`unescaped`] methods. An","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20668,"byte_end":20760,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ iterator over the attributes is returned by the [`attributes`] method.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20761,"byte_end":20835,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20836,"byte_end":20839,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`name`]: #method.name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20840,"byte_end":20866,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`local_name`]: #method.local_name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20867,"byte_end":20905,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/ [`unescaped`]: #method.unescaped","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20906,"byte_end":20942,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ [`attributes`]: #method.attributes","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20943,"byte_end":20981,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21439,"byte_end":21447,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesStart>::borrowed","value":"pub fn borrowed(&'a [u8], usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes).","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21240,"byte_end":21314,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21319,"byte_end":21322,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21327,"byte_end":21340,"line_start":41,"line_end":41,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21345,"byte_end":21348,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `&content[..name_len]` is not checked to be a valid name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21353,"byte_end":21413,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21418,"byte_end":21427,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21763,"byte_end":21776,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"borrowed_name","qualname":"<BytesStart>::borrowed_name","value":"pub fn borrowed_name(&'a [u8]) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name.","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21599,"byte_end":21650,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21655,"byte_end":21658,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21663,"byte_end":21676,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21681,"byte_end":21684,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ `&content` is not checked to be a valid name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21689,"byte_end":21737,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21742,"byte_end":21751,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21999,"byte_end":22004,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesStart>::owned","value":"pub fn owned<C: Into<Vec<u8>>>(C, usize) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes)","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21865,"byte_end":21938,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21943,"byte_end":21946,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21951,"byte_end":21973,"line_start":64,"line_end":64,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21978,"byte_end":21987,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22297,"byte_end":22307,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"owned_name","qualname":"<BytesStart>::owned_name","value":"pub fn owned_name<C: Into<Vec<u8>>>(C) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22186,"byte_end":22236,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22241,"byte_end":22244,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22249,"byte_end":22271,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22276,"byte_end":22285,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22567,"byte_end":22577,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesStart>::into_owned","value":"pub fn into_owned(Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22512,"byte_end":22555,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22766,"byte_end":22774,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<BytesStart>::to_owned","value":"pub fn to_owned(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event without taking ownership of Event\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event without taking ownership of Event","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22678,"byte_end":22754,"line_start":90,"line_end":90,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23129,"byte_end":23144,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<BytesStart>::with_attributes","value":"pub fn with_attributes<'b, I>(Self, I) -> Self where I: IntoIterator,\nI::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","sig":null,"attributes":[{"value":"/ Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22874,"byte_end":22967,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22972,"byte_end":22975,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":22980,"byte_end":23052,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23057,"byte_end":23060,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23065,"byte_end":23117,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23407,"byte_end":23411,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesStart>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw tag name as a `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw tag name as a `&[u8]`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23332,"byte_end":23381,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23386,"byte_end":23395,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23681,"byte_end":23691,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesStart>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","sig":null,"attributes":[{"value":"/ Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23476,"byte_end":23553,"line_start":115,"line_end":115,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23558,"byte_end":23561,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ All content up to and including the first `:` character is removed from the tag name.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23566,"byte_end":23655,"line_start":117,"line_end":117,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23660,"byte_end":23669,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23997,"byte_end":24006,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesStart>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23821,"byte_end":23853,"line_start":124,"line_end":124,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23858,"byte_end":23861,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23866,"byte_end":23956,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23961,"byte_end":23971,"line_start":127,"line_end":127,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":23976,"byte_end":23985,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24173,"byte_end":24183,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"attributes","qualname":"<BytesStart>::attributes","value":"pub fn attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the attributes of this tag.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the attributes of this tag.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24105,"byte_end":24161,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24370,"byte_end":24385,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"html_attributes","qualname":"<BytesStart>::html_attributes","value":"pub fn html_attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24263,"byte_end":24358,"line_start":138,"line_end":138,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24640,"byte_end":24654,"line_start":146,"line_end":146,"column_start":12,"column_end":26},"name":"attributes_raw","qualname":"<BytesStart>::attributes_raw","value":"pub fn attributes_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,\n including the whitespace after the tag name if there is any.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24466,"byte_end":24545,"line_start":143,"line_end":143,"column_start":5,"column_end":84}},{"value":"/ including the whitespace after the tag name if there is any.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24550,"byte_end":24614,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24619,"byte_end":24628,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24941,"byte_end":24958,"line_start":155,"line_end":155,"column_start":12,"column_end":29},"name":"extend_attributes","qualname":"<BytesStart>::extend_attributes","value":"pub fn extend_attributes<'b, I>(&mut Self, I) -> &mut BytesStart where\nI: IntoIterator, I::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attributes to this tag using an iterator.","sig":null,"attributes":[{"value":"/ Add additional attributes to this tag using an iterator.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24719,"byte_end":24779,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24784,"byte_end":24787,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24792,"byte_end":24864,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24869,"byte_end":24872,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":24877,"byte_end":24929,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25765,"byte_end":25784,"line_start":178,"line_end":178,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesStart>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25200,"byte_end":25251,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25256,"byte_end":25259,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25264,"byte_end":25360,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25365,"byte_end":25388,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25393,"byte_end":25396,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25401,"byte_end":25481,"line_start":171,"line_end":171,"column_start":5,"column_end":85}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25486,"byte_end":25582,"line_start":172,"line_end":172,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25587,"byte_end":25590,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`unescaped()`]: #method.unescaped","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25595,"byte_end":25633,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25638,"byte_end":25706,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25711,"byte_end":25739,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":25744,"byte_end":25753,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27004,"byte_end":27018,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"push_attribute","qualname":"<BytesStart>::push_attribute","value":"pub fn push_attribute<'b, A: Into<Attribute>>(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Adds an attribute to this element.\n","sig":null,"attributes":[{"value":"/ Adds an attribute to this element.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":26954,"byte_end":26992,"line_start":202,"line_end":202,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27464,"byte_end":27472,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"set_name","qualname":"<BytesStart>::set_name","value":"pub fn set_name(&mut Self, &[u8]) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Edit the name of the BytesStart in-place","sig":null,"attributes":[{"value":"/ Edit the name of the BytesStart in-place","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27325,"byte_end":27369,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27374,"byte_end":27377,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27382,"byte_end":27395,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27400,"byte_end":27403,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ `name` is not checked to be a valid name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27408,"byte_end":27452,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27738,"byte_end":27754,"line_start":226,"line_end":226,"column_start":12,"column_end":28},"name":"clear_attributes","qualname":"<BytesStart>::clear_attributes","value":"pub fn clear_attributes(&mut Self) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Remove all attributes from the ByteStart\n","sig":null,"attributes":[{"value":"/ Remove all attributes from the ByteStart","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27682,"byte_end":27726,"line_start":225,"line_end":225,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28347,"byte_end":28356,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"BytesDecl","qualname":"::events::BytesDecl","value":"BytesDecl {  }","parent":null,"children":[{"krate":0,"index":586}],"decl_id":null,"docs":" An XML declaration (`Event::Decl`).","sig":null,"attributes":[{"value":"/ An XML declaration (`Event::Decl`).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28173,"byte_end":28212,"line_start":242,"line_end":242,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28213,"byte_end":28216,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ [W3C XML 1.1 Prolog and Document Type Declaration](http://w3.org/TR/xml11/#sec-prolog-dtd)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28217,"byte_end":28311,"line_start":244,"line_end":244,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28481,"byte_end":28491,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"from_start","qualname":"<BytesDecl>::from_start","value":"pub fn from_start(BytesStart) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BytesDecl` from a `BytesStart`\n","sig":null,"attributes":[{"value":"/ Creates a `BytesDecl` from a `BytesStart`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28424,"byte_end":28469,"line_start":251,"line_end":251,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28641,"byte_end":28648,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"version","qualname":"<BytesDecl>::version","value":"pub fn version(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml version, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml version, including quotes (' or \")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28582,"byte_end":28629,"line_start":256,"line_end":256,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":29278,"byte_end":29286,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"encoding","qualname":"<BytesDecl>::encoding","value":"pub fn encoding(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml encoding, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml encoding, including quotes (' or \")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":29218,"byte_end":29266,"line_start":273,"line_end":273,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":29715,"byte_end":29725,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"standalone","qualname":"<BytesDecl>::standalone","value":"pub fn standalone(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml standalone, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml standalone, including quotes (' or \")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":29653,"byte_end":29703,"line_start":288,"line_end":288,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30598,"byte_end":30601,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesDecl>::new","value":"pub fn new(&[u8], Option<&[u8]>, Option<&[u8]>) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),\n the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)\n attribute.","sig":null,"attributes":[{"value":"/ Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30094,"byte_end":30183,"line_start":303,"line_end":303,"column_start":5,"column_end":94}},{"value":"/ the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30188,"byte_end":30277,"line_start":304,"line_end":304,"column_start":5,"column_end":94}},{"value":"/ attribute.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30282,"byte_end":30296,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30301,"byte_end":30304,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Does not escape any of its inputs. Always uses double quotes to wrap the attribute values.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30309,"byte_end":30403,"line_start":307,"line_end":307,"column_start":5,"column_end":99}},{"value":"/ The caller is responsible for escaping attribute values. Shouldn't usually be relevant since","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30408,"byte_end":30504,"line_start":308,"line_end":308,"column_start":5,"column_end":101}},{"value":"/ the double quote character is not allowed in any of the attribute values.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":30509,"byte_end":30586,"line_start":309,"line_end":309,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":31856,"byte_end":31863,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"encoder","qualname":"<BytesDecl>::encoder","value":"pub fn encoder(&Self) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Gets the decoder struct\n","sig":null,"attributes":[{"value":"/ Gets the decoder struct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":31781,"byte_end":31808,"line_start":350,"line_end":350,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"encoding_rs\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":31813,"byte_end":31844,"line_start":351,"line_end":351,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32078,"byte_end":32088,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesDecl>::into_owned","value":"pub fn into_owned(Self) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32023,"byte_end":32066,"line_start":358,"line_end":358,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":593},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32277,"byte_end":32285,"line_start":368,"line_end":368,"column_start":12,"column_end":20},"name":"BytesEnd","qualname":"::events::BytesEnd","value":"BytesEnd {  }","parent":null,"children":[{"krate":0,"index":595}],"decl_id":null,"docs":" A struct to manage `Event::End` events\n","sig":null,"attributes":[{"value":"/ A struct to manage `Event::End` events","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32206,"byte_end":32248,"line_start":366,"line_end":366,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32420,"byte_end":32428,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesEnd>::borrowed","value":"pub fn borrowed(&'a [u8]) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` borrowing a slice\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` borrowing a slice","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32348,"byte_end":32394,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32399,"byte_end":32408,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32612,"byte_end":32617,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesEnd>::owned","value":"pub fn owned(Vec<u8>) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` owning its name\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` owning its name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32542,"byte_end":32586,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32591,"byte_end":32600,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32787,"byte_end":32797,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesEnd>::into_owned","value":"pub fn into_owned(Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32732,"byte_end":32775,"line_start":389,"line_end":389,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32977,"byte_end":32981,"line_start":398,"line_end":398,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesEnd>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets `BytesEnd` event name\n","sig":null,"attributes":[{"value":"/ Gets `BytesEnd` event name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32921,"byte_end":32951,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32956,"byte_end":32965,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33260,"byte_end":33270,"line_start":406,"line_end":406,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesEnd>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" local name (excluding namespace) as &[u8] (without eventual attributes)\n returns the name() with any leading namespace removed (all content up to\n and including the first ':' character)\n","sig":null,"attributes":[{"value":"/ local name (excluding namespace) as &[u8] (without eventual attributes)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33031,"byte_end":33106,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ returns the name() with any leading namespace removed (all content up to","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33111,"byte_end":33187,"line_start":403,"line_end":403,"column_start":5,"column_end":81}},{"value":"/ and including the first ':' character)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33192,"byte_end":33234,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33239,"byte_end":33248,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33820,"byte_end":33829,"line_start":427,"line_end":427,"column_start":12,"column_end":21},"name":"BytesText","qualname":"::events::BytesText","value":"BytesText {  }","parent":null,"children":[{"krate":0,"index":601}],"decl_id":null,"docs":" Data from various events (most notably, `Event::Text`).\n","sig":null,"attributes":[{"value":"/ Data from various events (most notably, `Event::Text`).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33732,"byte_end":33791,"line_start":425,"line_end":425,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34031,"byte_end":34043,"line_start":435,"line_end":435,"column_start":12,"column_end":24},"name":"from_escaped","qualname":"<BytesText>::from_escaped","value":"pub fn from_escaped<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped byte sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped byte sequence.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33945,"byte_end":34005,"line_start":433,"line_end":433,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34010,"byte_end":34019,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34311,"byte_end":34321,"line_start":444,"line_end":444,"column_start":12,"column_end":22},"name":"from_plain","qualname":"<BytesText>::from_plain","value":"pub fn from_plain(&'a [u8]) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a byte sequence. The byte sequence is\n expected not to be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a byte sequence. The byte sequence is","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34177,"byte_end":34249,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ expected not to be escaped.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34254,"byte_end":34285,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34290,"byte_end":34299,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34518,"byte_end":34534,"line_start":452,"line_end":452,"column_start":12,"column_end":28},"name":"from_escaped_str","qualname":"<BytesText>::from_escaped_str","value":"pub fn from_escaped_str<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped string.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped string.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34439,"byte_end":34492,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34497,"byte_end":34506,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34899,"byte_end":34913,"line_start":462,"line_end":462,"column_start":12,"column_end":26},"name":"from_plain_str","qualname":"<BytesText>::from_plain_str","value":"pub fn from_plain_str(&'a str) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a string. The string is expected not to\n be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a string. The string is expected not to","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34779,"byte_end":34853,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ be escaped.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34858,"byte_end":34873,"line_start":460,"line_end":460,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":34878,"byte_end":34887,"line_start":461,"line_end":461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35121,"byte_end":35131,"line_start":469,"line_end":469,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesText>::into_owned","value":"pub fn into_owned(Self) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Ensures that all data is owned to extend the object's lifetime if\n necessary.\n","sig":null,"attributes":[{"value":"/ Ensures that all data is owned to extend the object's lifetime if","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35007,"byte_end":35076,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ necessary.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35081,"byte_end":35095,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35100,"byte_end":35109,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35679,"byte_end":35688,"line_start":486,"line_end":486,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesText>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content","sig":null,"attributes":[{"value":"/ gets escaped content","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35459,"byte_end":35483,"line_start":482,"line_end":482,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35488,"byte_end":35491,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35496,"byte_end":35579,"line_start":484,"line_end":484,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35584,"byte_end":35667,"line_start":485,"line_end":485,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":36124,"byte_end":36155,"line_start":498,"line_end":498,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<BytesText>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &mut Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35781,"byte_end":35853,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35858,"byte_end":35895,"line_start":491,"line_end":491,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35900,"byte_end":35903,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35908,"byte_end":35972,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":35977,"byte_end":36014,"line_start":494,"line_end":494,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":36019,"byte_end":36048,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":36053,"byte_end":36079,"line_start":496,"line_end":496,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":36084,"byte_end":36112,"line_start":497,"line_end":497,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37490,"byte_end":37509,"line_start":531,"line_end":531,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesText>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37189,"byte_end":37261,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37266,"byte_end":37269,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37274,"byte_end":37338,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37343,"byte_end":37380,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37385,"byte_end":37414,"line_start":528,"line_end":528,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37419,"byte_end":37445,"line_start":529,"line_end":529,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":37450,"byte_end":37478,"line_start":530,"line_end":530,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38452,"byte_end":38459,"line_start":551,"line_end":551,"column_start":12,"column_end":19},"name":"escaped","qualname":"<BytesText>::escaped","value":"pub fn escaped(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets escaped content.\n","sig":null,"attributes":[{"value":"/ Gets escaped content.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38415,"byte_end":38440,"line_start":550,"line_end":550,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39034,"byte_end":39039,"line_start":572,"line_end":572,"column_start":5,"column_end":10},"name":"Start","qualname":"::events::Event::Start","value":"Event::Start(BytesStart)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Start tag (with attributes) `<tag attr=\"value\">`.\n","sig":null,"attributes":[{"value":"/ Start tag (with attributes) `<tag attr=\"value\">`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38976,"byte_end":39029,"line_start":571,"line_end":571,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39087,"byte_end":39090,"line_start":574,"line_end":574,"column_start":5,"column_end":8},"name":"End","qualname":"::events::Event::End","value":"Event::End(BytesEnd)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" End tag `</tag>`.\n","sig":null,"attributes":[{"value":"/ End tag `</tag>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39061,"byte_end":39082,"line_start":573,"line_end":573,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39178,"byte_end":39183,"line_start":576,"line_end":576,"column_start":5,"column_end":10},"name":"Empty","qualname":"::events::Event::Empty","value":"Event::Empty(BytesStart)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Empty element tag (with attributes) `<tag attr=\"value\" />`.\n","sig":null,"attributes":[{"value":"/ Empty element tag (with attributes) `<tag attr=\"value\" />`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39110,"byte_end":39173,"line_start":575,"line_end":575,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39263,"byte_end":39267,"line_start":578,"line_end":578,"column_start":5,"column_end":9},"name":"Text","qualname":"::events::Event::Text","value":"Event::Text(BytesText)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Character data between `Start` and `End` element.\n","sig":null,"attributes":[{"value":"/ Character data between `Start` and `End` element.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39205,"byte_end":39258,"line_start":577,"line_end":577,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39320,"byte_end":39327,"line_start":580,"line_end":580,"column_start":5,"column_end":12},"name":"Comment","qualname":"::events::Event::Comment","value":"Event::Comment(BytesText)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Comment `<!-- ... -->`.\n","sig":null,"attributes":[{"value":"/ Comment `<!-- ... -->`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39288,"byte_end":39315,"line_start":579,"line_end":579,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39381,"byte_end":39386,"line_start":582,"line_end":582,"column_start":5,"column_end":10},"name":"CData","qualname":"::events::Event::CData","value":"Event::CData(BytesText)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" CData `<![CDATA[...]]>`.\n","sig":null,"attributes":[{"value":"/ CData `<![CDATA[...]]>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39348,"byte_end":39376,"line_start":581,"line_end":581,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39446,"byte_end":39450,"line_start":584,"line_end":584,"column_start":5,"column_end":9},"name":"Decl","qualname":"::events::Event::Decl","value":"Event::Decl(BytesDecl)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" XML declaration `<?xml ...?>`.\n","sig":null,"attributes":[{"value":"/ XML declaration `<?xml ...?>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39407,"byte_end":39441,"line_start":583,"line_end":583,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39513,"byte_end":39515,"line_start":586,"line_end":586,"column_start":5,"column_end":7},"name":"PI","qualname":"::events::Event::PI","value":"Event::PI(BytesText)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Processing instruction `<?...?>`.\n","sig":null,"attributes":[{"value":"/ Processing instruction `<?...?>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39471,"byte_end":39508,"line_start":585,"line_end":585,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39569,"byte_end":39576,"line_start":588,"line_end":588,"column_start":5,"column_end":12},"name":"DocType","qualname":"::events::Event::DocType","value":"Event::DocType(BytesText)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Doctype `<!DOCTYPE...>`.\n","sig":null,"attributes":[{"value":"/ Doctype `<!DOCTYPE...>`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39536,"byte_end":39564,"line_start":587,"line_end":587,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39626,"byte_end":39629,"line_start":590,"line_end":590,"column_start":5,"column_end":8},"name":"Eof","qualname":"::events::Event::Eof","value":"Event::Eof","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" End of XML document.\n","sig":null,"attributes":[{"value":"/ End of XML document.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39597,"byte_end":39621,"line_start":589,"line_end":589,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":605},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38960,"byte_end":38965,"line_start":570,"line_end":570,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"pub enum Event<'a> {\n    Start(BytesStart),\n    End(BytesEnd),\n    Empty(BytesStart),\n    Text(BytesText),\n    Comment(BytesText),\n    CData(BytesText),\n    Decl(BytesDecl),\n    PI(BytesText),\n    DocType(BytesText),\n    Eof,\n}","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634}],"decl_id":null,"docs":" Event emitted by [`Reader::read_event`].","sig":null,"attributes":[{"value":"/ Event emitted by [`Reader::read_event`].","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38803,"byte_end":38847,"line_start":566,"line_end":566,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38848,"byte_end":38851,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ [`Reader::read_event`]: ../reader/struct.Reader.html#method.read_event","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38852,"byte_end":38926,"line_start":568,"line_end":568,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39815,"byte_end":39825,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Event>::into_owned","value":"pub fn into_owned(Self) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Converts the event to an owned version, untied to the lifetime of\n buffer used when reading but incurring a new, seperate allocation.\n","sig":null,"attributes":[{"value":"/ Converts the event to an owned version, untied to the lifetime of","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39659,"byte_end":39728,"line_start":594,"line_end":594,"column_start":5,"column_end":74}},{"value":"/ buffer used when reading but incurring a new, seperate allocation.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39733,"byte_end":39803,"line_start":595,"line_end":595,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60131,"byte_end":60137,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" A low level encoding-agnostic XML event reader.","sig":null,"attributes":[{"value":"/ A low level encoding-agnostic XML event reader.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58861,"byte_end":58912,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58913,"byte_end":58916,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Consumes a `BufRead` and streams XML `Event`s.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58917,"byte_end":58967,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58968,"byte_end":58971,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58972,"byte_end":58986,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58987,"byte_end":58990,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58991,"byte_end":58998,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":58999,"byte_end":59025,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59026,"byte_end":59059,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59060,"byte_end":59063,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59064,"byte_end":59101,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59102,"byte_end":59158,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59159,"byte_end":59198,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59199,"byte_end":59225,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59226,"byte_end":59269,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59270,"byte_end":59297,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59298,"byte_end":59320,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59321,"byte_end":59350,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59351,"byte_end":59380,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59381,"byte_end":59391,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59392,"byte_end":59435,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59436,"byte_end":59476,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/             match e.name() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59477,"byte_end":59509,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59510,"byte_end":59576,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59577,"byte_end":59657,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59658,"byte_end":59720,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59721,"byte_end":59763,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59764,"byte_end":59792,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59793,"byte_end":59810,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59811,"byte_end":59825,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59826,"byte_end":59910,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":59911,"byte_end":59999,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60000,"byte_end":60036,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/         _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60037,"byte_end":60057,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60058,"byte_end":60067,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60068,"byte_end":60088,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60089,"byte_end":60094,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":60095,"byte_end":60102,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":61408,"byte_end":61419,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<B>>::from_reader","value":"pub fn from_reader(B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Reader` that reads from a reader implementing `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a `Reader` that reads from a reader implementing `BufRead`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":61325,"byte_end":61396,"line_start":99,"line_end":99,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62648,"byte_end":62669,"line_start":131,"line_end":131,"column_start":12,"column_end":33},"name":"expand_empty_elements","qualname":"<Reader<B>>::expand_empty_elements","value":"pub fn expand_empty_elements(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether empty elements should be split into an `Open` and a `Close` event.","sig":null,"attributes":[{"value":"/ Changes whether empty elements should be split into an `Open` and a `Close` event.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62065,"byte_end":62151,"line_start":120,"line_end":120,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62156,"byte_end":62159,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Empty`] events produced by a self-closing tag like `<tag/>` are","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62164,"byte_end":62257,"line_start":122,"line_end":122,"column_start":5,"column_end":98}},{"value":"/ expanded into a [`Start`] event followed by a [`End`] event. When set to `false` (the","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62262,"byte_end":62351,"line_start":123,"line_end":123,"column_start":5,"column_end":94}},{"value":"/ default), those tags are represented by an [`Empty`] event instead.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62356,"byte_end":62427,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62432,"byte_end":62435,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62440,"byte_end":62464,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62469,"byte_end":62472,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: events/enum.Event.html#variant.Empty","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62477,"byte_end":62528,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/ [`Start`]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62533,"byte_end":62584,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62589,"byte_end":62636,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63091,"byte_end":63100,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"trim_text","qualname":"<Reader<B>>::trim_text","value":"pub fn trim_text(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace before and after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace before and after character data should be removed.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62778,"byte_end":62859,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62864,"byte_end":62867,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Text`] events are trimmed. If they are empty, no event will be","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62872,"byte_end":62964,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ pushed.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62969,"byte_end":62980,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62985,"byte_end":62988,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":62993,"byte_end":63017,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63022,"byte_end":63025,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63030,"byte_end":63079,"line_start":143,"line_end":143,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63708,"byte_end":63741,"line_start":160,"line_end":160,"column_start":12,"column_end":45},"name":"trim_markup_names_in_closing_tags","qualname":"<Reader<B>>::trim_markup_names_in_closing_tags","value":"pub fn trim_markup_names_in_closing_tags(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes wether trailing whitespaces after the markup name are trimmed in closing tags\n `</a >`.","sig":null,"attributes":[{"value":"/ Changes wether trailing whitespaces after the markup name are trimmed in closing tags","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63197,"byte_end":63286,"line_start":149,"line_end":149,"column_start":5,"column_end":94}},{"value":"/ `</a >`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63291,"byte_end":63303,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63308,"byte_end":63311,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If true the emitted [`End`] event is stripped of trailing whitespace after the markup name.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63316,"byte_end":63411,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63416,"byte_end":63419,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that if set to `false` and `check_end_names` is true the comparison of markup names is","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63424,"byte_end":63519,"line_start":154,"line_end":154,"column_start":5,"column_end":100}},{"value":"/ going to fail erronously if a closing tag contains trailing whitespaces.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63524,"byte_end":63600,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63605,"byte_end":63608,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63613,"byte_end":63636,"line_start":157,"line_end":157,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63641,"byte_end":63644,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63649,"byte_end":63696,"line_start":159,"line_end":159,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64466,"byte_end":64481,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"check_end_names","qualname":"<Reader<B>>::check_end_names","value":"pub fn check_end_names(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether mismatched closing tag names should be detected.","sig":null,"attributes":[{"value":"/ Changes whether mismatched closing tag names should be detected.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63862,"byte_end":63930,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63935,"byte_end":63938,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, it won't check if a closing tag matches the corresponding opening tag.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":63943,"byte_end":64038,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ For example, `<mytag></different_tag>` will be permitted.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64043,"byte_end":64104,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64109,"byte_end":64112,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the XML is known to be sane (already processed, etc.) this saves extra time.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64117,"byte_end":64200,"line_start":170,"line_end":170,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64205,"byte_end":64208,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that the emitted [`End`] event will not be modified if this is disabled, ie. it will","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64213,"byte_end":64306,"line_start":172,"line_end":172,"column_start":5,"column_end":98}},{"value":"/ contain the data of the mismatched end tag.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64311,"byte_end":64358,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64363,"byte_end":64366,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64371,"byte_end":64394,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64399,"byte_end":64402,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64407,"byte_end":64454,"line_start":177,"line_end":177,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65069,"byte_end":65083,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"check_comments","qualname":"<Reader<B>>::check_comments","value":"pub fn check_comments(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether comments should be validated.","sig":null,"attributes":[{"value":"/ Changes whether comments should be validated.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64584,"byte_end":64633,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64638,"byte_end":64641,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, every [`Comment`] event will be checked for not containing `--`, which","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64646,"byte_end":64740,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/ is not allowed in XML comments. Most of the time we don't want comments at all so we don't","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64745,"byte_end":64839,"line_start":186,"line_end":186,"column_start":5,"column_end":99}},{"value":"/ really care about comment correctness, thus the default value is `false` to improve","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64844,"byte_end":64931,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ performance.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64936,"byte_end":64952,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64957,"byte_end":64960,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64965,"byte_end":64989,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":64994,"byte_end":64997,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ [`Comment`]: events/enum.Event.html#variant.Comment","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65002,"byte_end":65057,"line_start":192,"line_end":192,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65296,"byte_end":65311,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"buffer_position","qualname":"<Reader<B>>::buffer_position","value":"pub fn buffer_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current byte position in the input data.","sig":null,"attributes":[{"value":"/ Gets the current byte position in the input data.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65185,"byte_end":65238,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65243,"byte_end":65246,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Useful when debugging errors.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":65251,"byte_end":65284,"line_start":200,"line_end":200,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78925,"byte_end":78935,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"read_event","qualname":"<Reader<B>>::read_event","value":"pub fn read_event<'a, 'b>(&'a mut Self, &'b mut Vec<u8>) -> Result<Event>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next `Event`.","sig":null,"attributes":[{"value":"/ Reads the next `Event`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77242,"byte_end":77269,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77274,"byte_end":77277,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the main entry point for reading XML `Event`s.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77282,"byte_end":77340,"line_start":484,"line_end":484,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77345,"byte_end":77348,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ `Event`s borrow `buf` and can be converted to own their data if needed (uses `Cow`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77353,"byte_end":77439,"line_start":486,"line_end":486,"column_start":5,"column_end":91}},{"value":"/ internally).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77444,"byte_end":77460,"line_start":487,"line_end":487,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77465,"byte_end":77468,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Having the possibility to control the internal buffers gives you some additional benefits","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77473,"byte_end":77566,"line_start":489,"line_end":489,"column_start":5,"column_end":98}},{"value":"/ such as:","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77571,"byte_end":77583,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77588,"byte_end":77591,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ - Reduce the number of allocations by reusing the same buffer. For constrained systems,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77596,"byte_end":77687,"line_start":492,"line_end":492,"column_start":5,"column_end":96}},{"value":"/   you can call `buf.clear()` once you are done with processing the event (typically at the","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77692,"byte_end":77786,"line_start":493,"line_end":493,"column_start":5,"column_end":99}},{"value":"/   end of your loop).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77791,"byte_end":77815,"line_start":494,"line_end":494,"column_start":5,"column_end":29}},{"value":"/ - Reserve the buffer length if you know the file size (using `Vec::with_capacity`).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77820,"byte_end":77907,"line_start":495,"line_end":495,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77912,"byte_end":77915,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77920,"byte_end":77934,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77939,"byte_end":77942,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77947,"byte_end":77954,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77959,"byte_end":77985,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":77990,"byte_end":78023,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78028,"byte_end":78031,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78036,"byte_end":78073,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78078,"byte_end":78134,"line_start":504,"line_end":504,"column_start":5,"column_end":61}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78139,"byte_end":78178,"line_start":505,"line_end":505,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78183,"byte_end":78209,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78214,"byte_end":78257,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78262,"byte_end":78289,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78294,"byte_end":78316,"line_start":509,"line_end":509,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78321,"byte_end":78350,"line_start":510,"line_end":510,"column_start":5,"column_end":34}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78355,"byte_end":78384,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78389,"byte_end":78399,"line_start":512,"line_end":512,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78404,"byte_end":78447,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => count += 1,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78452,"byte_end":78502,"line_start":514,"line_end":514,"column_start":5,"column_end":55}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).expect(\"Error!\")),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78507,"byte_end":78599,"line_start":515,"line_end":515,"column_start":5,"column_end":97}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78604,"byte_end":78692,"line_start":516,"line_end":516,"column_start":5,"column_end":93}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78697,"byte_end":78733,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78738,"byte_end":78758,"line_start":518,"line_end":518,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78763,"byte_end":78772,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78777,"byte_end":78797,"line_start":520,"line_end":520,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78802,"byte_end":78807,"line_start":521,"line_end":521,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78812,"byte_end":78857,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78862,"byte_end":78901,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":78906,"byte_end":78913,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79907,"byte_end":79922,"line_start":547,"line_end":547,"column_start":12,"column_end":27},"name":"event_namespace","qualname":"<Reader<B>>::event_namespace","value":"pub fn event_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **event name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **event name** into (namespace name, local name).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79438,"byte_end":79524,"line_start":539,"line_end":539,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79529,"byte_end":79532,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79537,"byte_end":79631,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79636,"byte_end":79730,"line_start":542,"line_end":542,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79735,"byte_end":79803,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79808,"byte_end":79811,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* event inherits the current *default namespace*.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79816,"byte_end":79881,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":79886,"byte_end":79895,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80642,"byte_end":80661,"line_start":564,"line_end":564,"column_start":12,"column_end":31},"name":"attribute_namespace","qualname":"<Reader<B>>::attribute_namespace","value":"pub fn attribute_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **attribute name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **attribute name** into (namespace name, local name).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80151,"byte_end":80241,"line_start":556,"line_end":556,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80246,"byte_end":80249,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80254,"byte_end":80348,"line_start":558,"line_end":558,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80353,"byte_end":80447,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80452,"byte_end":80520,"line_start":560,"line_end":560,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80525,"byte_end":80528,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* attribute names do *not* inherit the current *default namespace*.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80533,"byte_end":80616,"line_start":562,"line_end":562,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80621,"byte_end":80630,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82589,"byte_end":82610,"line_start":615,"line_end":615,"column_start":12,"column_end":33},"name":"read_namespaced_event","qualname":"<Reader<B>>::read_namespaced_event","value":"pub fn read_namespaced_event<'a, 'b,\n'c>(&'a mut Self, &'b mut Vec<u8>, &'c mut Vec<u8>)\n-> Result<(Option<&'c [u8]>, Event)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next event and resolves its namespace (if applicable).","sig":null,"attributes":[{"value":"/ Reads the next event and resolves its namespace (if applicable).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80891,"byte_end":80959,"line_start":573,"line_end":573,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80964,"byte_end":80967,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80972,"byte_end":80986,"line_start":575,"line_end":575,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80991,"byte_end":80994,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":80999,"byte_end":81006,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81011,"byte_end":81039,"line_start":578,"line_end":578,"column_start":5,"column_end":33}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81044,"byte_end":81070,"line_start":579,"line_end":579,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81075,"byte_end":81108,"line_start":580,"line_end":580,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81113,"byte_end":81116,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<x:tag1 xmlns:x=\"www.xxxx\" xmlns:y=\"www.yyyy\" att1 = \"test\">","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81121,"byte_end":81198,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/                 <y:tag2><!--Test comment-->Test</y:tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81203,"byte_end":81263,"line_start":583,"line_end":583,"column_start":5,"column_end":65}},{"value":"/                 <y:tag2>Test 2</y:tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81268,"byte_end":81311,"line_start":584,"line_end":584,"column_start":5,"column_end":48}},{"value":"/             </x:tag1>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81316,"byte_end":81344,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81349,"byte_end":81392,"line_start":586,"line_end":586,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81397,"byte_end":81424,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81429,"byte_end":81451,"line_start":588,"line_end":588,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81456,"byte_end":81485,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/ let mut ns_buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81490,"byte_end":81522,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81527,"byte_end":81556,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81561,"byte_end":81571,"line_start":592,"line_end":592,"column_start":5,"column_end":15}},{"value":"/     match reader.read_namespaced_event(&mut buf, &mut ns_buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81576,"byte_end":81643,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/         Ok((ref ns, Event::Start(ref e))) => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81648,"byte_end":81698,"line_start":594,"line_end":594,"column_start":5,"column_end":55}},{"value":"/             count += 1;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81703,"byte_end":81730,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/             match (*ns, e.local_name()) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81735,"byte_end":81780,"line_start":596,"line_end":596,"column_start":5,"column_end":50}},{"value":"/                 (Some(b\"www.xxxx\"), b\"tag1\") => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81785,"byte_end":81840,"line_start":597,"line_end":597,"column_start":5,"column_end":60}},{"value":"/                 (Some(b\"www.yyyy\"), b\"tag2\") => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81845,"byte_end":81900,"line_start":598,"line_end":598,"column_start":5,"column_end":60}},{"value":"/                 (ns, n) => panic!(\"Namespace and local name mismatch\"),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81905,"byte_end":81980,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":81985,"byte_end":82002,"line_start":600,"line_end":600,"column_start":5,"column_end":22}},{"value":"/             println!(\"Resolved namespace: {:?}\", ns.and_then(|ns| from_utf8(ns).ok()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82007,"byte_end":82098,"line_start":601,"line_end":601,"column_start":5,"column_end":96}},{"value":"/         }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82103,"byte_end":82116,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/         Ok((_, Event::Text(e))) => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82121,"byte_end":82161,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/             txt.push(e.unescape_and_decode(&reader).expect(\"Error!\"))","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82166,"byte_end":82239,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82244,"byte_end":82258,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82263,"byte_end":82351,"line_start":606,"line_end":606,"column_start":5,"column_end":93}},{"value":"/         Ok((_, Event::Eof)) => break,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82356,"byte_end":82397,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/         _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82402,"byte_end":82422,"line_start":608,"line_end":608,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82427,"byte_end":82436,"line_start":609,"line_end":609,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82441,"byte_end":82461,"line_start":610,"line_end":610,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82466,"byte_end":82471,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82476,"byte_end":82521,"line_start":612,"line_end":612,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82526,"byte_end":82565,"line_start":613,"line_end":613,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":82570,"byte_end":82577,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84915,"byte_end":84923,"line_start":670,"line_end":670,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Reader<B>>::encoding","value":"pub fn encoding(&Self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Reader`s encoding.","sig":null,"attributes":[{"value":"/ Returns the `Reader`s encoding.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84654,"byte_end":84689,"line_start":662,"line_end":662,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84694,"byte_end":84697,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The used encoding may change after parsing the XML declaration.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84702,"byte_end":84769,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84774,"byte_end":84777,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This encoding will be used by [`decode`].","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84782,"byte_end":84827,"line_start":666,"line_end":666,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84832,"byte_end":84835,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`decode`]: #method.decode","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84840,"byte_end":84870,"line_start":668,"line_end":668,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84875,"byte_end":84903,"line_start":669,"line_end":669,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85318,"byte_end":85324,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<B>>::decode","value":"pub fn decode<'b, 'c>(&'b Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Decodes a slice using the encoding specified in the XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a slice using the encoding specified in the XML declaration.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":84987,"byte_end":85059,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85064,"byte_end":85067,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` with BOM sniffing and with malformed sequences replaced with the","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85072,"byte_end":85155,"line_start":676,"line_end":676,"column_start":5,"column_end":88}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85160,"byte_end":85195,"line_start":677,"line_end":677,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85200,"byte_end":85203,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ If no encoding is specified, defaults to UTF-8.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85208,"byte_end":85259,"line_start":679,"line_end":679,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85264,"byte_end":85273,"line_start":680,"line_end":680,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":85278,"byte_end":85306,"line_start":681,"line_end":681,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86437,"byte_end":86455,"line_start":712,"line_end":712,"column_start":12,"column_end":30},"name":"decode_without_bom","qualname":"<Reader<B>>::decode_without_bom","value":"pub fn decode_without_bom<'b, 'c>(&'b mut Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Decodes a slice using without BOM (Byte order mark) the encoding specified in the XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a slice using without BOM (Byte order mark) the encoding specified in the XML declaration.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86082,"byte_end":86184,"line_start":704,"line_end":704,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86189,"byte_end":86192,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` without BOM and with malformed sequences replaced with the","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86197,"byte_end":86274,"line_start":706,"line_end":706,"column_start":5,"column_end":82}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86279,"byte_end":86314,"line_start":707,"line_end":707,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86319,"byte_end":86322,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If no encoding is specified, defaults to UTF-8.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86327,"byte_end":86378,"line_start":709,"line_end":709,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86383,"byte_end":86392,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":86397,"byte_end":86425,"line_start":711,"line_end":711,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87706,"byte_end":87713,"line_start":747,"line_end":747,"column_start":12,"column_end":19},"name":"decoder","qualname":"<Reader<B>>::decoder","value":"pub fn decoder(&Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Get utf8 decoder\n","sig":null,"attributes":[{"value":"/ Get utf8 decoder","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87641,"byte_end":87661,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87666,"byte_end":87694,"line_start":746,"line_end":746,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":88071,"byte_end":88082,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<Reader<B>>::read_to_end","value":"pub fn read_to_end<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads until end element is found","sig":null,"attributes":[{"value":"/ Reads until end element is found","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87935,"byte_end":87971,"line_start":759,"line_end":759,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87976,"byte_end":87979,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Manages nested cases where parent and child elements have the same name","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":87984,"byte_end":88059,"line_start":761,"line_end":761,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90035,"byte_end":90044,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"read_text","qualname":"<Reader<B>>::read_text","value":"pub fn read_text<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads optional text between start and end tags.","sig":null,"attributes":[{"value":"/ Reads optional text between start and end tags.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":88821,"byte_end":88872,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":88877,"byte_end":88880,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ If the next event is a [`Text`] event, returns the decoded and unescaped content as a","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":88885,"byte_end":88974,"line_start":786,"line_end":786,"column_start":5,"column_end":94}},{"value":"/ `String`. If the next event is an [`End`] event, returns the empty string. In all other","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":88979,"byte_end":89070,"line_start":787,"line_end":787,"column_start":5,"column_end":96}},{"value":"/ cases, returns an error.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89075,"byte_end":89103,"line_start":788,"line_end":788,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89108,"byte_end":89111,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Any text will be decoded using the XML encoding specified in the XML declaration (or UTF-8","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89116,"byte_end":89210,"line_start":790,"line_end":790,"column_start":5,"column_end":99}},{"value":"/ if none is specified).","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89215,"byte_end":89241,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89246,"byte_end":89249,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89254,"byte_end":89268,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89273,"byte_end":89276,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89281,"byte_end":89288,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89293,"byte_end":89319,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89324,"byte_end":89357,"line_start":797,"line_end":797,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89362,"byte_end":89365,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ let mut xml = Reader::from_reader(b\"","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89370,"byte_end":89410,"line_start":799,"line_end":799,"column_start":5,"column_end":45}},{"value":"/     <a>&lt;b&gt;</a>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89415,"byte_end":89439,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/     <a></a>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89444,"byte_end":89459,"line_start":801,"line_end":801,"column_start":5,"column_end":20}},{"value":"/ \" as &[u8]);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89464,"byte_end":89480,"line_start":802,"line_end":802,"column_start":5,"column_end":21}},{"value":"/ xml.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89485,"byte_end":89509,"line_start":803,"line_end":803,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89514,"byte_end":89517,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let expected = [\"<b>\", \"\"];","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89522,"byte_end":89553,"line_start":805,"line_end":805,"column_start":5,"column_end":36}},{"value":"/ for &content in expected.iter() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89558,"byte_end":89595,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/     match xml.read_event(&mut Vec::new()) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89600,"byte_end":89647,"line_start":807,"line_end":807,"column_start":5,"column_end":52}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89652,"byte_end":89692,"line_start":808,"line_end":808,"column_start":5,"column_end":45}},{"value":"/             assert_eq!(&xml.read_text(e.name(), &mut Vec::new()).unwrap(), content);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89697,"byte_end":89785,"line_start":809,"line_end":809,"column_start":5,"column_end":93}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89790,"byte_end":89804,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/         e => panic!(\"Expecting Start event, found {:?}\", e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89809,"byte_end":89873,"line_start":811,"line_end":811,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89878,"byte_end":89887,"line_start":812,"line_end":812,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89892,"byte_end":89897,"line_start":813,"line_end":813,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89902,"byte_end":89909,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89914,"byte_end":89917,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89922,"byte_end":89971,"line_start":816,"line_end":816,"column_start":5,"column_end":54}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":89976,"byte_end":90023,"line_start":817,"line_end":817,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92343,"byte_end":92365,"line_start":882,"line_end":882,"column_start":12,"column_end":34},"name":"into_underlying_reader","qualname":"<Reader<B>>::into_underlying_reader","value":"pub fn into_underlying_reader(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes `Reader` returning the underlying reader","sig":null,"attributes":[{"value":"/ Consumes `Reader` returning the underlying reader","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90559,"byte_end":90612,"line_start":830,"line_end":830,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90617,"byte_end":90620,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ Can be used to compute line and column of a parsing error position","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90625,"byte_end":90695,"line_start":832,"line_end":832,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90700,"byte_end":90703,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90708,"byte_end":90722,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90727,"byte_end":90730,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90735,"byte_end":90742,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use std::{str, io::Cursor};","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90747,"byte_end":90778,"line_start":837,"line_end":837,"column_start":5,"column_end":36}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90783,"byte_end":90809,"line_start":838,"line_end":838,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90814,"byte_end":90847,"line_start":839,"line_end":839,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90852,"byte_end":90855,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90860,"byte_end":90897,"line_start":841,"line_end":841,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90902,"byte_end":90958,"line_start":842,"line_end":842,"column_start":5,"column_end":61}},{"value":"/                 <tag3>Test 2</tag3>","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":90963,"byte_end":91002,"line_start":843,"line_end":843,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91007,"byte_end":91033,"line_start":844,"line_end":844,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_reader(Cursor::new(xml.as_bytes()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91038,"byte_end":91108,"line_start":845,"line_end":845,"column_start":5,"column_end":75}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91113,"byte_end":91142,"line_start":846,"line_end":846,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91147,"byte_end":91150,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ fn into_line_and_column(reader: Reader<Cursor<&[u8]>>) -> (usize, usize) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91155,"byte_end":91233,"line_start":848,"line_end":848,"column_start":5,"column_end":83}},{"value":"/     let end_pos = reader.buffer_position();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91238,"byte_end":91285,"line_start":849,"line_end":849,"column_start":5,"column_end":52}},{"value":"/     let mut cursor = reader.into_underlying_reader();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91290,"byte_end":91347,"line_start":850,"line_end":850,"column_start":5,"column_end":62}},{"value":"/     let s = String::from_utf8(cursor.into_inner()[0..end_pos].to_owned())","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91352,"byte_end":91429,"line_start":851,"line_end":851,"column_start":5,"column_end":82}},{"value":"/         .expect(\"can't make a string\");","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91434,"byte_end":91477,"line_start":852,"line_end":852,"column_start":5,"column_end":48}},{"value":"/     let mut line = 1;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91482,"byte_end":91507,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     let mut column = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91512,"byte_end":91539,"line_start":854,"line_end":854,"column_start":5,"column_end":32}},{"value":"/     for c in s.chars() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91544,"byte_end":91572,"line_start":855,"line_end":855,"column_start":5,"column_end":33}},{"value":"/         if c == '\\n' {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91577,"byte_end":91603,"line_start":856,"line_end":856,"column_start":5,"column_end":31}},{"value":"/             line += 1;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91608,"byte_end":91634,"line_start":857,"line_end":857,"column_start":5,"column_end":31}},{"value":"/             column = 0;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91639,"byte_end":91666,"line_start":858,"line_end":858,"column_start":5,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91671,"byte_end":91691,"line_start":859,"line_end":859,"column_start":5,"column_end":25}},{"value":"/             column += 1;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91696,"byte_end":91724,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91729,"byte_end":91742,"line_start":861,"line_end":861,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91747,"byte_end":91756,"line_start":862,"line_end":862,"column_start":5,"column_end":14}},{"value":"/     (line, column)","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91761,"byte_end":91783,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91788,"byte_end":91793,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91798,"byte_end":91801,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91806,"byte_end":91816,"line_start":866,"line_end":866,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91821,"byte_end":91864,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => match e.name() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91869,"byte_end":91924,"line_start":868,"line_end":868,"column_start":5,"column_end":60}},{"value":"/             b\"tag1\" | b\"tag2\" => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91929,"byte_end":91969,"line_start":869,"line_end":869,"column_start":5,"column_end":45}},{"value":"/             tag => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":91974,"byte_end":91998,"line_start":870,"line_end":870,"column_start":5,"column_end":29}},{"value":"/                 assert_eq!(b\"tag3\", tag);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92003,"byte_end":92048,"line_start":871,"line_end":871,"column_start":5,"column_end":50}},{"value":"/                 assert_eq!((3, 22), into_line_and_column(reader));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92053,"byte_end":92123,"line_start":872,"line_end":872,"column_start":5,"column_end":75}},{"value":"/                 break;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92128,"byte_end":92154,"line_start":873,"line_end":873,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92159,"byte_end":92176,"line_start":874,"line_end":874,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92181,"byte_end":92195,"line_start":875,"line_end":875,"column_start":5,"column_end":19}},{"value":"/         Ok(Event::Eof) => unreachable!(),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92200,"byte_end":92245,"line_start":876,"line_end":876,"column_start":5,"column_end":50}},{"value":"/         _ => (),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92250,"byte_end":92270,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92275,"byte_end":92284,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92289,"byte_end":92309,"line_start":879,"line_end":879,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92314,"byte_end":92319,"line_start":880,"line_end":880,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92324,"byte_end":92331,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92498,"byte_end":92507,"line_start":889,"line_end":889,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Reader<BufReader<File>>>::from_file","value":"pub fn from_file<P: AsRef<Path>>(P) -> Result<Reader<BufReader<File>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a file path.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a file path.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92443,"byte_end":92486,"line_start":888,"line_end":888,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92809,"byte_end":92817,"line_start":898,"line_end":898,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Reader<&'a [u8]>>::from_str","value":"pub fn from_str(&'a str) -> Reader<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a string slice.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a string slice.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92751,"byte_end":92797,"line_start":897,"line_end":897,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":103924,"byte_end":103931,"line_start":1213,"line_end":1213,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":701}],"decl_id":null,"docs":" Utf8 Decoder\n","sig":null,"attributes":[{"value":"/ Utf8 Decoder","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":103844,"byte_end":103860,"line_start":1210,"line_end":1210,"column_start":1,"column_end":17}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":103861,"byte_end":103889,"line_start":1211,"line_end":1211,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":104187,"byte_end":104193,"line_start":1224,"line_end":1224,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":104147,"byte_end":104175,"line_start":1223,"line_end":1223,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107816,"byte_end":107822,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"decl_id":null,"docs":" XML writer.","sig":null,"attributes":[{"value":"/ XML writer.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105846,"byte_end":105861,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105862,"byte_end":105865,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Writes XML `Event`s to a `Write` implementor.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105866,"byte_end":105915,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105916,"byte_end":105919,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105920,"byte_end":105934,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105935,"byte_end":105938,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105939,"byte_end":105950,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # extern crate quick_xml;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105951,"byte_end":105980,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105981,"byte_end":105998,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ use quick_xml::{Reader, Writer};","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":105999,"byte_end":106035,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106036,"byte_end":106093,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106094,"byte_end":106118,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106119,"byte_end":106122,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106123,"byte_end":106199,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106200,"byte_end":106243,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106244,"byte_end":106271,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106272,"byte_end":106330,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106331,"byte_end":106360,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106361,"byte_end":106371,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106372,"byte_end":106415,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106416,"byte_end":106483,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106484,"byte_end":106487,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106488,"byte_end":106575,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106576,"byte_end":106611,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106612,"byte_end":106699,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106700,"byte_end":106703,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106704,"byte_end":106750,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106751,"byte_end":106832,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106833,"byte_end":106836,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106837,"byte_end":106922,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106923,"byte_end":106985,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106986,"byte_end":106989,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":106990,"byte_end":107039,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107040,"byte_end":107112,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107113,"byte_end":107127,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107128,"byte_end":107193,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107194,"byte_end":107290,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107291,"byte_end":107305,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107306,"byte_end":107342,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         // we can either move or borrow the event to write, depending on your use-case","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107343,"byte_end":107433,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/         Ok(e) => assert!(writer.write_event(&e).is_ok()),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107434,"byte_end":107495,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/         Err(e) => panic!(\"{}\", e),","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107496,"byte_end":107534,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107535,"byte_end":107544,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107545,"byte_end":107565,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107566,"byte_end":107571,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107572,"byte_end":107575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107576,"byte_end":107626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107627,"byte_end":107726,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107727,"byte_end":107771,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107772,"byte_end":107779,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107780,"byte_end":107787,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107996,"byte_end":107999,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"pub fn new(W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer from a generic Write","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107943,"byte_end":107984,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108204,"byte_end":108219,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"new_with_indent","qualname":"<Writer<W>>::new_with_indent","value":"pub fn new_with_indent(W, u8, usize) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer with configured whitespace indents from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer with configured whitespace indents from a generic Write","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108116,"byte_end":108192,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108489,"byte_end":108499,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying writer.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108417,"byte_end":108477,"line_start":83,"line_end":83,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108595,"byte_end":108600,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"inner","qualname":"<Writer<W>>::inner","value":"pub fn inner(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get inner writer, keeping ownership\n","sig":null,"attributes":[{"value":"/ Get inner writer, keeping ownership","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108544,"byte_end":108583,"line_start":88,"line_end":88,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108724,"byte_end":108735,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"write_event","qualname":"<Writer<W>>::write_event","value":"pub fn write_event<'a, E: AsRef<Event>>(&mut Self, E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the given event to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Writes the given event to the underlying writer.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":108660,"byte_end":108712,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110154,"byte_end":110159,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes\n","sig":null,"attributes":[{"value":"/ Writes bytes","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110112,"byte_end":110128,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110133,"byte_end":110142,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111283,"byte_end":111295,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"write_indent","qualname":"<Writer<W>>::write_indent","value":"pub fn write_indent(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Manually write a newline and indentation at the proper level.","sig":null,"attributes":[{"value":"/ Manually write a newline and indentation at the proper level.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110780,"byte_end":110845,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110850,"byte_end":110853,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This can be used when the heuristic to line break and indent after any [Event] apart","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110858,"byte_end":110946,"line_start":152,"line_end":152,"column_start":5,"column_end":93}},{"value":"/ from [Text] fails such as when a [Start] occurs directly after [Text].","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":110951,"byte_end":111025,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ This method will do nothing if `Writer` was not constructed with `new_with_indent`.","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111030,"byte_end":111117,"line_start":154,"line_end":154,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111122,"byte_end":111125,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [Event]: events/enum.Event.html","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111130,"byte_end":111165,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/ [Text]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111170,"byte_end":111217,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ [Start]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111222,"byte_end":111271,"line_start":158,"line_end":158,"column_start":5,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5865,"byte_end":5870,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6061,"byte_end":6066,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6422,"byte_end":6427,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":8422,"byte_end":8427,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12803,"byte_end":12814,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":14006,"byte_end":14017,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45148,"byte_end":45158,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46963,"byte_end":46972,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":50594,"byte_end":50603,"line_start":168,"line_end":168,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":50963,"byte_end":50972,"line_start":180,"line_end":180,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":51578,"byte_end":51587,"line_start":200,"line_end":200,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":52173,"byte_end":52183,"line_start":220,"line_end":220,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21219,"byte_end":21229,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27893,"byte_end":27903,"line_start":232,"line_end":232,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28404,"byte_end":28413,"line_start":250,"line_end":250,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32329,"byte_end":32337,"line_start":372,"line_end":372,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33483,"byte_end":33491,"line_start":415,"line_end":415,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33925,"byte_end":33934,"line_start":432,"line_end":432,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38546,"byte_end":38555,"line_start":556,"line_end":556,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39643,"byte_end":39648,"line_start":593,"line_end":593,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40492,"byte_end":40502,"line_start":612,"line_end":612,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40611,"byte_end":40620,"line_start":619,"line_end":619,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40733,"byte_end":40741,"line_start":626,"line_end":626,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40851,"byte_end":40860,"line_start":633,"line_end":633,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40973,"byte_end":40978,"line_start":640,"line_end":640,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":41481,"byte_end":41486,"line_start":657,"line_end":657,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":61309,"byte_end":61315,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92413,"byte_end":92419,"line_start":887,"line_end":887,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92728,"byte_end":92734,"line_start":896,"line_end":896,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":98250,"byte_end":98259,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":99790,"byte_end":99810,"line_start":1099,"line_end":1099,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":103975,"byte_end":103982,"line_start":1217,"line_end":1217,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107927,"byte_end":107933,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111746,"byte_end":111757,"line_start":179,"line_end":179,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/lib.rs","byte_start":4571,"byte_end":4577,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":52}},{"kind":"Mod","span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":20263,"byte_end":20273,"line_start":3,"line_end":3,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":53}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":5865,"byte_end":5870,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6061,"byte_end":6066,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":6422,"byte_end":6427,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/errors.rs","byte_start":8422,"byte_end":8427,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":490},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":12803,"byte_end":12814,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/escapei.rs","byte_start":14006,"byte_end":14017,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":531},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":45148,"byte_end":45158,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":46963,"byte_end":46972,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":50594,"byte_end":50603,"line_start":168,"line_end":168,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":50963,"byte_end":50972,"line_start":180,"line_end":180,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":51578,"byte_end":51587,"line_start":200,"line_end":200,"column_start":39,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/attributes.rs","byte_start":52173,"byte_end":52183,"line_start":220,"line_end":220,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":21219,"byte_end":21229,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":27893,"byte_end":27903,"line_start":232,"line_end":232,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":28404,"byte_end":28413,"line_start":250,"line_end":250,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":32329,"byte_end":32337,"line_start":372,"line_end":372,"column_start":10,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33483,"byte_end":33491,"line_start":415,"line_end":415,"column_start":30,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":33925,"byte_end":33934,"line_start":432,"line_end":432,"column_start":10,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":38546,"byte_end":38555,"line_start":556,"line_end":556,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":39643,"byte_end":39648,"line_start":593,"line_end":593,"column_start":10,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40492,"byte_end":40502,"line_start":612,"line_end":612,"column_start":20,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40611,"byte_end":40620,"line_start":619,"line_end":619,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40733,"byte_end":40741,"line_start":626,"line_end":626,"column_start":20,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40851,"byte_end":40860,"line_start":633,"line_end":633,"column_start":20,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":40973,"byte_end":40978,"line_start":640,"line_end":640,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/events/mod.rs","byte_start":41481,"byte_end":41486,"line_start":657,"line_end":657,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":61309,"byte_end":61315,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92413,"byte_end":92419,"line_start":887,"line_end":887,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":92728,"byte_end":92734,"line_start":896,"line_end":896,"column_start":10,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":98250,"byte_end":98259,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":99790,"byte_end":99810,"line_start":1099,"line_end":1099,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/reader.rs","byte_start":103975,"byte_end":103982,"line_start":1217,"line_end":1217,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":107927,"byte_end":107933,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saurabhs/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.19.0/src/writer.rs","byte_start":111746,"byte_end":111757,"line_start":179,"line_end":179,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}}]}